```
import re
from difflib import SequenceMatcher


common_words = ["password", "admin", "1234", "qwerty", "letmein"]

def password_strength_agent(password):
    score = 0
    suggestions = []

    
    if len(password) >= 12:
        score += 2
    elif len(password) >= 8:
        score += 1
    else:
        suggestions.append("Use at least 8 characters")

    
    if re.search(r'[A-Z]', password):
        score += 1
    else:
        suggestions.append("Add an uppercase letter")
        
    if re.search(r'[a-z]', password):
        score += 1
    else:
        suggestions.append("Add a lowercase letter")
        
    if re.search(r'\d', password):
        score += 1
    else:
        suggestions.append("Add a number")
        
    if re.search(r'[@$!%*?&]', password):
        score += 1
    else:
        suggestions.append("Add a special character")

   
    for word in common_words:
        if word in password.lower():
            score -= 2
            suggestions.append("Avoid common words like '{}'".format(word))

   
    for word in common_words:
        if SequenceMatcher(None, password.lower(), word).ratio() > 0.7:
            score -= 1
            suggestions.append("Password is too similar to a common word")

    if score <= 2:
        strength = "Weak"
    elif score <= 4:
        strength = "Medium"
    else:
        strength = "Strong"

    return strength, suggestions

# Example
password = "Admin123"
strength, advice = password_strength_agent(password)
print("Password Strength:", strength)
print("Suggestions:", advice)
